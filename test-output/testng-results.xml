<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="67" started-at="2019-07-29T13:09:24Z" finished-at="2019-07-29T13:09:24Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="67" started-at="2019-07-29T13:09:24Z" finished-at="2019-07-29T13:09:24Z">
      <class name="com.ng.DependsonMethod">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="beforeMethod" is-config="true" duration-ms="9" started-at="2019-07-29T18:39:24Z" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="testAdd" duration-ms="10" started-at="2019-07-29T18:39:24Z" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-07-29T18:39:24Z" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testDivide()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="testDivide" duration-ms="3" started-at="2019-07-29T18:39:24Z" finished-at="2019-07-29T18:39:24Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at com.ng.Calculator.divide(Calculator.java:10)
	at com.ng.DependsonMethod.testDivide(DependsonMethod.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivide -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-07-29T18:39:24Z" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-07-29T18:39:24Z" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-07-29T18:39:24Z" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testProcessEvenNumbers()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="testProcessEvenNumbers" duration-ms="5" started-at="2019-07-29T18:39:24Z" depends-on-methods="com.ng.DependsonMethod.testDivide, com.ng.DependsonMethod.testAdd" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessEvenNumbers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-07-29T18:39:24Z" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testProcessRealNumbers()[pri:0, instance:com.ng.DependsonMethod@51565ec2]" name="testProcessRealNumbers" duration-ms="2" started-at="2019-07-29T18:39:24Z" depends-on-methods="com.ng.DependsonMethod.testDivide, com.ng.DependsonMethod.testAdd" finished-at="2019-07-29T18:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessRealNumbers -->
      </class> <!-- com.ng.DependsonMethod -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
